#To fix TotalConnect Device Name Problem
  #Copy TotalConnectClient.py from Docker image to host
  #docker cp home-assistant:/usr/local/lib/python3.6/site-packages/total_connect_client/TotalConnectClient.py /mnt/cache/local/hass_extras/TotalConnectClient.py
  
  #Modify TotalConnectClient.py
    #vi /mnt/cache/local/hass_extras/TotalConnectClient.py
    #Scroll to the correct line (145) (if device[‘DevieName’] ==) and add in ‘Lynx Touch-WiFi’ as option
      #‘I’ to insert
      #‘x’ when in Command Mode (ESC) to delete old characters
      #‘:x” when in Command Mode (ESC) to save and quit

  #To find the device name I needed to modify the sub to print out each name it iterated across.  Mine turned out to be ‘Lynx Touch-WiFi’ – see below code snippet
  #    def get_security_panel_device_id(self, location):
  #        """Find the device id of the security panel."""
  #        deviceId = False
  #        currdevice = 1
  #        for device in location['DeviceList']['DeviceInfoBasic']:
  #            logging.info("Found device *" + device['DeviceName'] + "*.  It is panel number " + str(currdevice) + ".")
  #            if device['DeviceName'] == 'Security Panel' or device['DeviceName'] == 'Security System' or device['DeviceName'] == 'Lynx Touch-WiFi':
  #                deviceId = device['DeviceID']
  #
  #        if deviceId is False:
  #            raise Exception('No security panel found')
  #
  #        return deviceId

  #change following line
  #self.arm(ARM_TYPE_STAY_NIGHT, location_name)
  
  #to
  #self.arm(ARM_TYPE_STAY_INSTANT, location_name)
  
  #Push back to Docker image using
  #docker cp /mnt/cache/local/hass_extras/TotalConnectClient.py home-assistant:/usr/local/lib/python3.6/site-packages/total_connect_client/TotalConnectClient.py

  
#to remap 'ARM_TYPE_STAY_INSTANT' on the front end
  #Use below command to pull the const.py file
  #docker cp home-assistant:/usr/src/app/homeassistant/components/alarm_control_panel/totalconnect.py /mnt/cache/local/hass_extras/totalconnect.py
  
  #modify the file
  #add a new line underneath 'def update(self):'
  #        elif status == self._client.ARMED_STAY_INSTANT:
  #         state = STATE_ALARM_ARMED_NIGHT
  
  #Push back to Docker image using
  #docker cp /mnt/cache/local/hass_extras/totalconnect.py home-assistant:/usr/src/app/homeassistant/components/alarm_control_panel/totalconnect.py

  

#NEW FIXES BELOW

#Copy const.py from Docker image to host
  #docker cp home-assistant:/usr/src/app/homeassistant/const.py /mnt/cache/local/hass_extras/const.py
  #docker cp /mnt/cache/local/hass_extras/const.py home-assistant:/usr/src/app/homeassistant/const.py
  #docker cp home-assistant:/usr/src/app/homeassistant/components/alarm_control_panel/__init__.py /mnt/cache/local/hass_extras/__init__.py
  #docker cp /mnt/cache/local/hass_extras/__init__.py home-assistant:/usr/src/app/homeassistant/components/alarm_control_panel/__init__.py

  #update const.py to include the following
    #STATE_ALARM_ARMED_HOME_INSTANT = 'armed_home_instant'
    #STATE_ALARM_ARMED_AWAY_INSTANT = 'armed_away_instant'


  ##update totalconnect.py to include the following
    #import additional from const.py - STATE_ALARM_ARMED_HOME_INSTANT,STATE_ALARM_ARMED_AWAY_INSTANT)

    #add in new options under def update
    #   elif status == self._client.ARMED_AWAY_INSTANT:
            state = STATE_ALARM_ARMED_AWAY_INSTANT
        elif status == self._client.ARMED_STAY_INSTANT:
            state = STATE_ALARM_ARMED_HOME_INSTANT

    #add in new function to arm instant
    #def alarm_arm_home_instant(self, code=None):
        """Send arm stay instant command."""
        self._client.arm_stay_instant()

    def alarm_arm_away_instant(self, code=None):
        """Send arm away instant command."""
        self._client.arm_away_instant()